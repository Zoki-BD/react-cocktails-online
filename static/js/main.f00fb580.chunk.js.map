{"version":3,"sources":["hooks/useLocalStorage.js","reducer.js","context.js","pages/Favorites.js","components/Cocktail.js","components/Loading.js","components/Pagination.js","components/CocktailList.js","components/SearchForm.js","pages/Home.js","pages/About.js","pages/SingleCocktail.js","pages/Error.js","pages/Category.js","pages/Alcohol_filter.js","logo.svg","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["useLocalStorage","reducer","state","action","type","loading","cocktails","payload","searchTerm","favorites","filter","fav","id","AppContext","React","createContext","initialState","localStorage","getItem","JSON","parse","searchTerm2","AppProvider","children","useReducer","dispatch","useEffect","setItem","stringify","fetchDrinks","useCallback","a","fetch","response","json","data","drinks","newCocktails","map","item","idDrink","name","strDrink","image","strDrinkThumb","info","strAlcoholic","glass","strGlass","console","log","Provider","value","setSearch","addToFavorites","cocktail","removeFromFavorites","disableCocktailIfFavorite","favorite","find","obj","clearFavoritesCart","useGlobalContext","useContext","Favorites","length","className","to","src","alt","onClick","Cocktail","useState","isModalOpen","setIsModalOpen","disabled","isOpen","onRequestClose","style","overlay","position","top","left","right","bottom","display","alignItems","justifyContent","backgroundColor","content","border","background","padding","maxWidth","minWidth","height","body","color","Loading","Pagination","totalCocktails","cocktailsPerPage","paginate","setCurrentPage","pageNumbers","i","Math","ceil","push","checkNumber","number","href","index","CocktailList","currentPage","indexOfLastPost","indexOfFirstPost","currentCocktails","slice","brojNaPage","SearchForm","searchValue","useRef","current","focus","onSubmit","e","preventDefault","htmlFor","ref","onChange","target","Home","About","url","SingleCocktail","useParams","setLoading","singleCocktail","setSingleCocktail","category","strCategory","instructions","strInstructions","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","ingredients","getCocktail","Error","Category","Alcohol_filter","Navbar","logo","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f00fb580.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\n// Hook\r\nfunction useLocalStorage(key, initialValue) {\r\n   // State to store our value\r\n   // Pass initial state function to useState so logic is only executed once\r\n   const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n         // Get from local storage by key\r\n         const item = window.localStorage.getItem(key);\r\n         // Parse stored json or if none return initialValue\r\n         return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n         // If error also return initialValue\r\n         console.log(error);\r\n         return initialValue;\r\n      }\r\n   });\r\n   // Return a wrapped version of useState's setter function that ...\r\n   // ... persists the new value to localStorage.\r\n   const setValue = (value) => {\r\n      try {\r\n         // Allow value to be a function so we have same API as useState\r\n         const valueToStore =\r\n            value instanceof Function ? value(storedValue) : value;\r\n         // Save state\r\n         setStoredValue(valueToStore);\r\n         // Save to local storage\r\n         window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n         // A more advanced implementation would handle the error case\r\n         console.log(error);\r\n      }\r\n   };\r\n   return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;","function reducer(state, action) {\r\n\r\n\r\n   switch (action.type) {\r\n\r\n      case 'LOADING':\r\n         return { ...state, loading: true }\r\n\r\n      case 'LOADING_OFF':\r\n         return { ...state, loading: false }\r\n\r\n      case 'DISPLAY_ITEMS':\r\n         return { ...state, cocktails: action.payload, loading: false }\r\n\r\n      case 'NO_ITEMS_TO_DISPLAY':\r\n         return { cocktails: [], loading: false }\r\n\r\n      case 'FIRST_PAGE_TO_DISPLAY':\r\n         return { cocktails: [], loading: false }\r\n\r\n      case 'SET_SEARCHTERM':\r\n         return { ...state, searchTerm: action.payload }\r\n\r\n\r\n      case 'ADD_TO_FAVORITES':\r\n         return { ...state, favorites: [action.payload, ...state.favorites] } //mora da ima i spread za da nadopolnuva na vekje stavenite inaku samo po eden ke saocuvuva vo LS i ke go menja da e toj kliknatiot\r\n\r\n      case \"REMOVE_FROM_FAVORITES\":\r\n         return {\r\n            ...state,\r\n            favorites: state.favorites.filter(fav => fav.id !== action.payload)\r\n            //Ova filter znaci sporedi id na filmovite sto se vo watchlist arrayot so toa sto vleguva kkao payload i vrati gi tocnite ravenstva a tie ke bidat site drugi filmovi koi imaat razlicno id , i so toa sme go trgnale selektiraniot koj ima isto id\r\n            //VIP ovde za razlika od gore posto imame vlezen parametar id vo metodot vo context dovolno e smao action.payload posto toa e samoto id \r\n         }\r\n      case 'CLEAR_FAVORITES_CART':\r\n         return { ...state, favorites: [] } //vrati ni gi site props kako sto se vo context.js, smeni go samo favorites vo prazen array.\r\n\r\n      default:\r\n         return state;\r\n\r\n   }\r\n}\r\n\r\nexport default reducer","import React, { useState, useContext, useEffect, useReducer } from 'react'\r\nimport { useCallback } from 'react'\r\nimport reducer from './reducer'\r\n\r\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s='\r\nconst url2 = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?i='\r\n\r\nconst AppContext = React.createContext();\r\n\r\n// const [loading, setLoading] = useState(false)\r\n// const [cocktails, setCocktails] = useState([])\r\n// const [searchTerm, setSearchTerm] = useState('a') //na prvo da ne e prazna stranicata i da dava 'a' search po default\r\n\r\n\r\nconst initialState = {\r\n   loading: false,\r\n   cocktails: [],\r\n   // favorites: [],\r\n   favorites: localStorage.getItem('favorites') ? JSON.parse(localStorage.getItem('favorites')) : [],\r\n   searchTerm: 'a',\r\n   searchTerm2: 'a'\r\n}\r\n\r\n\r\n//ako sakame da gi socuvame vo LS\r\n// const initialState = {\r\n//    loading: false,\r\n//    cocktails: localStorage.getItem('cocktails') ? JSON.parse(localStorage.getItem('cocktails')) : [],\r\n//    searchTerm: 'a',\r\n//    searchTerm2: 'a'\r\n// }\r\n\r\n\r\nconst AppProvider = ({ children }) => {\r\n\r\n   const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n\r\n   if (state.searchTerm === '') {\r\n      dispatch({ type: 'FIRST_PAGE_TO_DISPLAY' })\r\n   }\r\n\r\n   useEffect(() => {\r\n      localStorage.setItem('favorites', JSON.stringify(state.favorites))\r\n\r\n   }, [state.favorites]);\r\n\r\n\r\n   const fetchDrinks = useCallback(async () => {\r\n\r\n      dispatch({ type: 'LOADING' });\r\n\r\n      try {\r\n\r\n         const response = await fetch(`${url}${state.searchTerm}`)\r\n         const data = await response.json();\r\n         const { drinks } = data;//drinks e glavniot prop od API-to. Zatoa mozeme da destructure it vnatre vo map-ot dole\r\n\r\n         if (drinks) {\r\n            const newCocktails = drinks.map(item => {\r\n               const { idDrink, strDrink, strDrinkThumb, strAlcoholic, strGlass } = item;\r\n\r\n               return { //direktno vikame vrati mi nov objekt i im davame tuka iminja na \r\n                  //destrukturiranite pogore odma vo map-ot\r\n                  id: idDrink,\r\n                  name: strDrink,\r\n                  image: strDrinkThumb,\r\n                  info: strAlcoholic,\r\n                  glass: strGlass\r\n               }\r\n            })\r\n            dispatch({ type: 'DISPLAY_ITEMS', payload: newCocktails })\r\n            // setCocktails(newCocktails)\r\n\r\n\r\n\r\n         } else {\r\n            dispatch({ type: 'NO_ITEMS_TO_DISPLAY' })\r\n            //setCocktails([]);\r\n         }\r\n         dispatch({ type: 'LOADING_OFF' })\r\n      } catch (error) {\r\n         console.log(error)\r\n         dispatch({ type: 'LOADING_OFF' })\r\n      }\r\n   }, [state.searchTerm])\r\n\r\n\r\n\r\n\r\n   useEffect(() => {\r\n      fetchDrinks()\r\n   }, [state.searchTerm, fetchDrinks])\r\n\r\n\r\n   const addToFavorites = (cocktail) => {\r\n      dispatch({ type: 'ADD_TO_FAVORITES', payload: cocktail })\r\n   }\r\n\r\n   const removeFromFavorites = (id) => {\r\n      dispatch({ type: 'REMOVE_FROM_FAVORITES', payload: id })\r\n   }\r\n\r\n\r\n   const setSearch = (searchTerm) => {\r\n      dispatch({ type: 'SET_SEARCHTERM', payload: searchTerm })\r\n   }\r\n\r\n   const disableCocktailIfFavorite = (favorite) => {\r\n      let favoriteCocktail = state.favorites.find(obj => obj.id === favorite.id)\r\n\r\n      const buttonDisabled = favoriteCocktail ? true : false;\r\n      return buttonDisabled;\r\n   }\r\n\r\n   const clearFavoritesCart = () => {\r\n      dispatch({ type: 'CLEAR_FAVORITES_CART' })\r\n   }\r\n\r\n   return (\r\n      <AppContext.Provider\r\n         value={{\r\n            ...state,\r\n            setSearch,\r\n            addToFavorites,\r\n            removeFromFavorites,\r\n            disableCocktailIfFavorite,\r\n            clearFavoritesCart\r\n         }}\r\n      >\r\n         {children}\r\n      </AppContext.Provider>\r\n   )\r\n\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n   return useContext(AppContext)\r\n}\r\n\r\nexport { AppContext, AppProvider }","import React, { useState } from 'react'\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useGlobalContext } from '../context'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Favorites() {\r\n\r\n   const { favorites, removeFromFavorites, clearFavoritesCart } = useGlobalContext();\r\n\r\n\r\n\r\n\r\n   if (favorites.length < 1) {\r\n      return (\r\n         <h1 className='empty-favorites-message'> Favorites cart is empty</ h1>\r\n      )\r\n   }\r\n\r\n   return (\r\n\r\n      <section className='section'>\r\n         <Link to='/' className='btn btn-primary-fav'>\r\n            back home\r\n         </Link>\r\n         <h2 className='section-title'>Favorites</h2>\r\n\r\n         <div className='cocktails-center'>\r\n            {\r\n               favorites.length > 0 && (\r\n                  <>\r\n                     {favorites.map((fav) => (\r\n\r\n                        <article className='cocktail' key={fav.id}>\r\n\r\n                           <div className='img-container'>\r\n\r\n                              <img src={fav.image} alt={fav.name} />\r\n                           </div>\r\n\r\n                           <div className='cocktail-footer'>\r\n                              <h3>{fav.name}</h3>\r\n                              <h4>{fav.glass}</h4>\r\n                              <p>{fav.info}</p>\r\n                           </div>\r\n                           <button className=\"btn btn-alert\" onClick={() => removeFromFavorites(fav.id)}>\r\n                              remove cocktail\r\n                           </button>\r\n                        </article>\r\n                     ))}\r\n\r\n                  </>\r\n               )\r\n            }\r\n\r\n         </div>\r\n         <button className=\"btn btn-primary-fav\" onClick={() => clearFavoritesCart()}>\r\n            Clear Cart\r\n         </button>\r\n      </section>\r\n\r\n\r\n\r\n\r\n\r\n   )\r\n}\r\n\r\nexport default Favorites\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport useLocalStorage from '../hooks/useLocalStorage'\r\nimport Favorites from '../pages/Favorites';\r\nimport { useGlobalContext } from '../context'\r\nimport Modal from 'react-modal';\r\n\r\n\r\n\r\n// function Cocktail({ id, name, image, info, glass, cocktail, cocktails }) {\r\nfunction Cocktail({ cocktails }) {\r\n\r\n   const { addToFavorites, disableCocktailIfFavorite } = useGlobalContext();\r\n\r\n   const [isModalOpen, setIsModalOpen] = useState(false)\r\n\r\n\r\n\r\n\r\n   return (\r\n      <>\r\n         {\r\n            cocktails.map(cocktail => (\r\n\r\n\r\n               // const { id, name, image, info, glass } = cocktail;\r\n               // console.log(name);\r\n\r\n\r\n               <article className='cocktail ' key={cocktail.id}>\r\n\r\n                  <div className='img-container'>\r\n\r\n                     <img src={cocktail.image} alt={cocktail.name} />\r\n                  </div>\r\n\r\n                  <div className='cocktail-footer'>\r\n                     <h3>{cocktail.name}</h3>\r\n                     <h4>{cocktail.glass}</h4>\r\n                     <p>{cocktail.info}</p>\r\n\r\n\r\n                     <Link to={`/cocktail/${cocktail.id}`} className=\"btn btn-primary btn-details\">\r\n                        details\r\n                     </Link>\r\n                     <button\r\n                        className='btn btn-primary btn-details'\r\n                        onClick={() => addToFavorites(cocktail)}\r\n                        disabled={disableCocktailIfFavorite(cocktail)}\r\n                     >\r\n                        Add to Favorites\r\n                     </button>\r\n                     {/* Modal pocenja od tuka nadole */}\r\n                     <div>\r\n                        <button className=\"btn btn-primary-fav-modal\">\r\n\r\n                           <button className=\"btn btn-primary btn-details\" onClick={() => setIsModalOpen(true)}> Details in modal</button>\r\n                        </button>\r\n                     </div>\r\n                     <Modal\r\n                        className='Modal'\r\n                        isOpen={isModalOpen}\r\n                        onRequestClose={() => setIsModalOpen(false)}\r\n                        style={\r\n                           {\r\n                              overlay: {\r\n                                 position: 'fixed',\r\n                                 top: 0,\r\n                                 left: 0,\r\n                                 right: 0,\r\n                                 bottom: 0,\r\n                                 display: 'flex',\r\n                                 alignItems: 'center',\r\n                                 justifyContent: 'center',\r\n                                 backgroundColor: 'rgba(90,98,107,.9)'\r\n                              },\r\n                              content: {\r\n                                 position: 'null', // to override default styles\r\n                                 top: 'null',\r\n                                 left: 'null',\r\n                                 right: 'null',\r\n                                 bottom: 'null',\r\n                                 border: '2px solid #5B6675',\r\n                                 background: 'white',\r\n                                 padding: '28px 15px',\r\n                                 maxWidth: '760px',\r\n                                 minWidth: '400px',\r\n                                 height: '55vh'\r\n                              },\r\n                              body: {\r\n                                 color: 'null',\r\n                              }\r\n                           }}\r\n                     >\r\n\r\n                        <button\r\n                           className='btn-modalClose'\r\n                           onClick={() => setIsModalOpen(false)}>Close</button>\r\n                        <div className='modal-body'>\r\n                           <h2 className='section-title-modal'>{cocktail.name}</h2>\r\n                           <div className='drink'>\r\n\r\n                              <img src={cocktail.image} alt={cocktail.name} className='img-modal'></img>\r\n                              <div className='drink-info'>\r\n                                 <p>\r\n                                    <span className='drink-data'>name: </span> {cocktail.name}\r\n                                 </p>\r\n\r\n                                 <p>\r\n                                    <span className='drink-data'>info: </span> {cocktail.info}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className='drink-data'>glass: </span> {cocktail.glass}\r\n                                 </p>\r\n                              </div>\r\n                           </div>\r\n                        </div>\r\n\r\n                     </Modal>\r\n\r\n                  </div>\r\n\r\n               </article>\r\n            ))\r\n\r\n         }\r\n\r\n      </>\r\n   )\r\n}\r\n\r\nexport default Cocktail\r\n\r\n\r\n   //Za da menjame ako sakame da stavame vo favorites preku button kopce koe ke e (+) t.e ke pokaze (-) na disable \r\n   // const add = (e) => {\r\n\r\n   //    // const newAdded = {\r\n   //    //    id: id,\r\n   //    //    name: name,\r\n   //    //    info: info,\r\n   //    // }\r\n\r\n   //    if (e.target.classList.contains(\"favorite-btn\")) {\r\n   //       if (e.target.classList.contains(\"is-favorite\")) {\r\n   //          //Dodavame class is-favorite vo css prvo pa ovde vo zavisnost ja trgame ili dodavame za da smeni boja kopceto\r\n   //          //remove the class\r\n   //          e.target.classList.remove(\"is-favorite\");\r\n   //          e.target.textContent = \"+\"; //dodavame plus znak da ako ne e selektirano\r\n   //       } else {\r\n   //          //Add the class back\r\n   //          e.target.classList.add(\"is-favorite\");\r\n   //          e.target.textContent = \"-\"; //dodavame minus znak da dade ako e selektirano\r\n   //       }\r\n\r\n   //    }\r\n   // }","import React from 'react'\r\n\r\n\r\nfunction Loading() {\r\n   return (\r\n\r\n      <div className=\"loader\" >\r\n\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nexport default Loading\r\n","import React, { useState } from 'react'\r\nimport { FaChevronLeft, FaChevronRight, FaQuoteRight } from 'react-icons/fa';\r\n\r\nfunction Pagination({ totalCocktails, cocktailsPerPage, paginate, setCurrentPage }) {\r\n\r\n   const pageNumbers = [];\r\n\r\n   console.log(paginate)\r\n\r\n   for (let i = 1; i <= Math.ceil(totalCocktails / cocktailsPerPage); i++) {\r\n      pageNumbers.push(i)\r\n   }\r\n\r\n\r\n   const checkNumber = (number) => {\r\n      // pageNumbers.length -1  e poslednoto indexno mesto\r\n      if (number > pageNumbers.length - 1) {\r\n         return 0;\r\n      }\r\n      if (number < 0) {\r\n         return pageNumbers.length - 1;\r\n      }\r\n      return number;\r\n   };\r\n\r\n\r\n   //Ova e metod za prev i e ist kako kaj counterot koga idevme so prevValue\r\n   const paginateLeft = () => {\r\n      setCurrentPage((index) => {\r\n         // let newIndex = index - 1;\r\n         return checkNumber(index - 1);\r\n      });\r\n   };\r\n\r\n   //Metod za next. Ovde odime cisto za deka moze i vaka, preku let varijabla. isto e\r\n   const paginateRight = () => {\r\n      setCurrentPage((index) => {\r\n         let newIndex = index + 1;\r\n         return checkNumber(newIndex);\r\n      });\r\n   };\r\n\r\n   if (pageNumbers.length < 1) {\r\n      return '';\r\n   }\r\n\r\n   return (\r\n      <nav className='text-center'>\r\n         <ul className='pagination justify-content-center'>\r\n\r\n            <div className='button-container'>\r\n               <a href=\"#\" className='strelka' onClick={paginateLeft} >\r\n                  <FaChevronLeft />\r\n               </a>\r\n            </div>\r\n            <div className=\" list-group list-group-horizontal\">\r\n               {\r\n                  pageNumbers.map(number => (\r\n                     <li key={number} className=\"page-item  \">\r\n                        <a href=\"#\" onClick={() => paginate(number)} className=\"page-link \" >\r\n                           {number}\r\n                        </a>\r\n                     </li>\r\n                  ))\r\n               }\r\n            </div>\r\n            <div >\r\n               <a href='#' className='strelka' onClick={paginateRight}>\r\n                  <FaChevronRight />\r\n               </a>\r\n            </div>\r\n         </ul>\r\n      </nav >\r\n   )\r\n}\r\n\r\nexport default Pagination\r\n","import React, { useState, useEffect } from 'react'\r\nimport Cocktail from './Cocktail'\r\nimport Loading from './Loading'\r\nimport { useGlobalContext } from '../context'\r\nimport Pagination from './Pagination'\r\n\r\n\r\nfunction CocktailList() {\r\n\r\n   const { loading, cocktails } = useGlobalContext();\r\n\r\n\r\n\r\n   //ovie dva state-a se za da moze da pravime pagination. \r\n   const [currentPage, setCurrentPage] = useState(1) //stranicata na koja sme momentalno pri prelistuvanjeto.\r\n   const [cocktailsPerPage, setcocktailsPerPage] = useState(6) //kolku da pokazuva postovi na edna stranica prelistuvanje.\r\n\r\n\r\n\r\n   const indexOfLastPost = currentPage * cocktailsPerPage; //momental.page e primer 4-tata i sega 4 x 10 = 40 sto e index sto na prviot post na toj page\r\n   const indexOfFirstPost = indexOfLastPost - cocktailsPerPage;\r\n   const currentCocktails = cocktails.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n\r\n\r\n   //Change page on klik\r\n   const paginate = (brojNaPage) => {\r\n      setCurrentPage(brojNaPage);\r\n   }\r\n\r\n\r\n\r\n   if (loading) {\r\n      return <Loading />\r\n   }\r\n\r\n\r\n   if (cocktails.length < 1) {\r\n      return (\r\n         <h2 className='section-title'>\r\n            no cocktails matched your search\r\n         </h2>\r\n      )\r\n   }\r\n\r\n   return (\r\n      <section className='section'>\r\n\r\n         {/* za proverka na LS od net primerot\r\n         <div>\r\n            <input\r\n               type=\"text\"\r\n               placeholder=\"Enter your name\"\r\n               value={name}\r\n               onChange={(e) => setName(e.target.value)}\r\n            />\r\n         </div> */}\r\n\r\n\r\n         <h2 className='section-title'>cocktails</h2>\r\n         <div className='cocktails-center'>\r\n            {/* {cocktails.map((item) => {\r\n               return <Cocktail key={item.id} {...item} cocktails={currentCocktails} cocktail={item} />\r\n            })} */}\r\n            <Cocktail cocktails={currentCocktails} />\r\n         </div>\r\n         <Pagination cocktailsPerPage={cocktailsPerPage} totalCocktails={cocktails.length} paginate={paginate} setCurrentPage={setCurrentPage} />\r\n      </section>\r\n\r\n   )\r\n}\r\n\r\n\r\n\r\n\r\nexport default CocktailList\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useGlobalContext } from '../context'\r\n\r\n\r\nfunction SearchForm() {\r\n\r\n\r\n   const { setSearch } = useGlobalContext();\r\n\r\n\r\n\r\n\r\n   const searchValue = useRef('');\r\n\r\n\r\n\r\n   useEffect(() => {\r\n      searchValue.current.focus()\r\n   }, [])\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n   }\r\n\r\n   return (\r\n      <section className='section search'>\r\n         <form className='search-form' onSubmit={handleSubmit}>\r\n            <div className='form-control'>\r\n               <label htmlFor='name'>search cocktails by name</label>\r\n               <input type='text' id=\"name\" ref={searchValue}\r\n                  // onChange={(e) => setSearchTerm(e.target.value)} /> vaka bese bez reducerot\r\n                  onChange={(e) => setSearch(e.target.value)} />\r\n\r\n            </div>\r\n         </form>\r\n      </section>\r\n   )\r\n}\r\n\r\nexport default SearchForm\r\n\r\n","import React from 'react'\r\nimport CocktailList from '../components/CocktailList'\r\nimport SearchForm from '../components/SearchForm'\r\n\r\nfunction Home() {\r\n   return (\r\n      <main>\r\n         <SearchForm />\r\n         <CocktailList />\r\n      </main>\r\n   )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n   return (\r\n      <section className=\"section about-section\">\r\n         <h1 className=\"section-title\">about us</h1>\r\n         <p>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestiae\r\n            repudiandae architecto qui adipisci in officiis, aperiam sequi atque\r\n            perferendis eos, autem maiores nisi saepe quisquam hic odio consectetur\r\n            nobis veritatis quasi explicabo obcaecati doloremque? Placeat ratione\r\n            hic aspernatur error blanditiis?\r\n         </p>\r\n      </section>\r\n   )\r\n}\r\n\r\nexport default About\r\n","import React, { useState, useEffect } from 'react'\r\nimport Loading from '../components/Loading'\r\nimport { useParams, Link } from 'react-router-dom'\r\n\r\n\r\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i='\r\n\r\n\r\nfunction SingleCocktail() {\r\n\r\n   const { id } = useParams()\r\n\r\n\r\n   const [loading, setLoading] = useState(false)\r\n   const [singleCocktail, setSingleCocktail] = useState(null)\r\n\r\n   console.log(id)\r\n   //odime so useEffect kako bi na sekoe renderiranje pravelo fetch i da dava info za toj id na odredeniot koktel\r\n   // Imame url koe treba da go kombinirame so paramsot\r\n\r\n\r\n   useEffect(() => {\r\n      setLoading(true);\r\n      async function getCocktail() {\r\n         try {\r\n            const response = await fetch(`${url}${id}`)\r\n            const data = await response.json()\r\n\r\n            //ideme isto kako vo context pak tuka. Prkeu drinks ke proverime dali ke dade prazen array ili ke ima nesto\r\n            if (data.drinks) {\r\n               console.log(data.drinks)\r\n               const { //oba e na poinakov nacin od context.js na destructuring kade direkt davame iminja nasi pri destructuriranjeto\r\n                  strDrink: name,\r\n                  strDrinkThumb: image,\r\n                  strAlcoholic: info,\r\n                  strCategory: category,\r\n                  strGlass: glass,\r\n                  strInstructions: instructions,\r\n                  strIngredient1,\r\n                  strIngredient2,\r\n                  strIngredient3,\r\n                  strIngredient4,\r\n                  strIngredient5,\r\n               } = data.drinks[0] //posto samo eden koktel ni treba vrakjame so index mesto 0 t.e prviot sto ke go najde so toa id\r\n\r\n\r\n               //kreirame ingredients array i gi stavame vnatre gore povikanite APi props(posto ne sakavme nase ime ostanaa tie od API-to sto doagjaat)\r\n               const ingredients = [\r\n                  strIngredient1,\r\n                  strIngredient2,\r\n                  strIngredient3,\r\n                  strIngredient4,\r\n                  strIngredient5,\r\n               ]\r\n               const newCocktail = {\r\n                  name,\r\n                  image,\r\n                  info,\r\n                  category,\r\n                  glass,\r\n                  instructions,\r\n                  ingredients,\r\n               }\r\n               setSingleCocktail(newCocktail)\r\n               setLoading(false)\r\n            } else {\r\n               setSingleCocktail(null)\r\n               setLoading(false)\r\n            }\r\n\r\n         } catch (error) {\r\n            console.log(error)\r\n            setLoading(false)\r\n         }\r\n      }\r\n      getCocktail()\r\n   }, [id])\r\n\r\n\r\n\r\n   if (loading) {\r\n      return <Loading />\r\n   }\r\n\r\n\r\n   if (!singleCocktail) {\r\n      return <h2 className='section-title'>no cocktail to display</h2>\r\n   } else {\r\n      const {\r\n         name,\r\n         image,\r\n         category,\r\n         info,\r\n         glass,\r\n         instructions,\r\n         ingredients,\r\n      } = singleCocktail\r\n\r\n\r\n      return (\r\n         <section className='section cocktail-section'>\r\n            <Link to='/' className='btn btn-primary'>\r\n               back home\r\n            </Link>\r\n            <h2 className='section-title'>{name}</h2>\r\n            <div className='drink'>\r\n\r\n               <img src={image} alt={name}></img>\r\n               <div className='drink-info'>\r\n                  <p>\r\n                     <span className='drink-data'>name :</span><span className='sminka'>{name}</span>\r\n                  </p>\r\n                  <p>\r\n                     <span className='drink-data'>category :</span> <span className='sminka'>{category}</span>\r\n                  </p>\r\n                  <p>\r\n                     <span className='drink-data'>info :</span> <span className='sminka'>{info}</span>\r\n                  </p>\r\n                  <p>\r\n                     <span className='drink-data'>glass :</span> <span className='sminka'>{glass}</span>\r\n                  </p>\r\n                  <p>\r\n                     <span className='drink-data'>instructons :</span> <span className='sminka'>{instructions}</span>\r\n                  </p>\r\n                  <p>\r\n                     <span className='drink-data'>ingredients :</span>\r\n                     <span className=\"sminka\"> {ingredients.map((item, index) => {\r\n                        return item ? <span key={index}> {item}</span> : null\r\n                     })}</span>\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </section>\r\n      )\r\n   }\r\n}\r\n\r\nexport default SingleCocktail\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nfunction Error() {\r\n   return (\r\n      <section className=\"error-page section\">\r\n         <div className=\"error-container\">\r\n            <h1>oops! it's a dead end</h1>\r\n            <Link to=\"/\" className=\"btn btn-primary\">\r\n               back home\r\n            </Link>\r\n         </div>\r\n      </section>\r\n   )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\n\r\nfunction Category() {\r\n   return (\r\n      <div>\r\n         <h1 className='section-title'> Category Cart</h1>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Category\r\n","import React from 'react'\r\n\r\nfunction Alcohol_filter() {\r\n   return (\r\n      <div>\r\n         <h1 className='section-title'> Alcoholic/Non Alcoholic Cart</h1>\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nexport default Alcohol_filter\r\n","export default __webpack_public_path__ + \"static/media/logo.f43a2245.svg\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../logo.svg'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nfunction Navbar() {\r\n   return (\r\n      <nav className='navbar navbar-expand-lg  navbar-light bg-warning'>\r\n         <div className='container'>\r\n            <Link to='/' className='navbar-brand text-uppercase'>\r\n               <img src={logo} alt='LOGO' className='logo' />\r\n            </Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-controls=\"navbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n               <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbar\">\r\n               <ul className=\"navbar-nav mr-auto\">\r\n                  <li className='nav-item'>\r\n                     <Link to='/' className=\"nav-link\">\r\n                        Name\r\n                     </Link>\r\n                  </li>\r\n\r\n\r\n                  <li className='nav-item'>\r\n                     <Link to='/category' className=\"nav-link\">\r\n                        Category\r\n                     </Link>\r\n                  </li>\r\n                  <li className='nav-item'>\r\n                     <Link to='/alcohol_filter' className=\"nav-link\">\r\n                        Alcohol / Non Alcohol\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            <div className=\"dropdown\">\r\n               <Link to='/favorites' className='btn btn-danger'>\r\n                  My Favorites\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </nav >\r\n\r\n   )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\n// import pages\nimport Home from './pages/Home'\nimport About from './pages/About'\nimport SingleCocktail from './pages/SingleCocktail'\nimport Error from './pages/Error'\nimport Category from './pages/Category'\nimport Alcohol_filter from './pages/Alcohol_filter'\n\n// import components\nimport Navbar from './components/Navbar'\n\nimport Favorites from './pages/Favorites'\n\n\n\nfunction App() {\n   return (\n\n      <Router>\n         <Navbar />\n         <Switch>\n            <Route exact path='/'>\n               <Home />\n            </Route>\n            <Route path='/about'>\n               <About />\n            </Route>\n\n            <Route path='/category'>\n               <Category />\n            </Route>\n            <Route path='/alcohol_filter'>\n               <Alcohol_filter />\n            </Route>\n            <Route path='/cocktail/:id'>\n               <SingleCocktail />\n            </Route>\n            <Route path='/favorites'>\n               <Favorites />\n            </Route>\n            <Route path='*'>\n               <Error />\n            </Route>\n         </Switch>\n      </Router>\n\n   );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AppProvider } from './context';\n\n\n\n\nReactDOM.render(\n   <React.StrictMode>\n      <AppProvider>\n         <App />\n      </AppProvider>\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}